***************
*** 124,133 ****
                      ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
                  }
              }
-             for (int position = indexOfVararg; position < matchers.size(); position++) {
-                 Matcher m = matchers.get(position);
                  if (m instanceof CapturesArguments) {
-                     ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);
                  }
              }
          } else {
--- 124,135 ----
                      ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
                  }
              }
+             for (Matcher m : uniqueMatcherSet(indexOfVararg)) {
                  if (m instanceof CapturesArguments) {
+                     Object rawArgument = invocation.getRawArguments()[indexOfVararg];
+                     for (int i = 0; i < Array.getLength(rawArgument); i++) {
+                         ((CapturesArguments) m).captureFrom(Array.get(rawArgument, i));
+                     }
                  }
              }
          } else {
***************
*** 140,145 ****
          }
      }
  
  
      public static List<InvocationMatcher> createFrom(List<Invocation> invocations) {
          LinkedList<InvocationMatcher> out = new LinkedList<InvocationMatcher>();
--- 142,159 ----
          }
      }
  
+     private Set<Matcher> uniqueMatcherSet(int indexOfVararg) {
+         HashSet<Matcher> set = new HashSet<Matcher>();
+         for (int position = indexOfVararg; position < matchers.size(); position++) {
+             Matcher matcher = matchers.get(position);
+             if(matcher instanceof MatcherDecorator) {
+                 set.add(((MatcherDecorator) matcher).getActualMatcher());
+             } else {
+                 set.add(matcher);
+             }
+         }
+         return set;
+     }
  
      public static List<InvocationMatcher> createFrom(List<Invocation> invocations) {
          LinkedList<InvocationMatcher> out = new LinkedList<InvocationMatcher>();
