***************
*** 16,21 ****
  import org.mockito.exceptions.base.MockitoException;
  import org.mockito.internal.util.MockUtil;
  
  
  @SuppressWarnings({"unchecked"})
  public class SpyAnnotationEngine implements AnnotationEngine {
--- 16,22 ----
  import org.mockito.exceptions.base.MockitoException;
  import org.mockito.internal.util.MockUtil;
  
+ import static org.mockito.Mockito.withSettings;
  
  @SuppressWarnings({"unchecked"})
  public class SpyAnnotationEngine implements AnnotationEngine {
***************
*** 46,52 ****
                          // instance has been spied earlier
                          Mockito.reset(instance);
                      } else {
-                         field.set(testClass, Mockito.spy(instance));
                      }
                  } catch (IllegalAccessException e) {
                      throw new MockitoException("Problems initiating spied field " + field.getName(), e);
--- 47,56 ----
                          // instance has been spied earlier
                          Mockito.reset(instance);
                      } else {
+                         field.set(testClass, Mockito.mock(instance.getClass(), withSettings()
+                                 .spiedInstance(instance)
+                                 .defaultAnswer(Mockito.CALLS_REAL_METHODS)
+                                 .name(field.getName())));
                      }
                  } catch (IllegalAccessException e) {
                      throw new MockitoException("Problems initiating spied field " + field.getName(), e);
