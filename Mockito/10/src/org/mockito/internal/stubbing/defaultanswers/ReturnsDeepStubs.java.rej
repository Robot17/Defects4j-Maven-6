***************
*** 14,19 ****
  import org.mockito.internal.util.MockUtil;
  import org.mockito.internal.util.reflection.GenericMetadataSupport;
  import org.mockito.invocation.InvocationOnMock;
  import org.mockito.stubbing.Answer;
  
  import java.io.IOException;
--- 14,20 ----
  import org.mockito.internal.util.MockUtil;
  import org.mockito.internal.util.reflection.GenericMetadataSupport;
  import org.mockito.invocation.InvocationOnMock;
+ import org.mockito.mock.MockCreationSettings;
  import org.mockito.stubbing.Answer;
  
  import java.io.IOException;
***************
*** 68,74 ****
  
          // record deep stub answer
          return recordDeepStubAnswer(
-                 newDeepStubMock(returnTypeGenericMetadata),
                  container
          );
      }
--- 69,75 ----
  
          // record deep stub answer
          return recordDeepStubAnswer(
+                 newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),
                  container
          );
      }
***************
*** 84,105 ****
       * @param parentMock The parent of the current deep stub mock.
       * @return The mock
       */
-     private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata) {
          return mockitoCore().mock(
                  returnTypeGenericMetadata.rawType(),
-                 withSettingsUsing(returnTypeGenericMetadata)
          );
      }
  
-     private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata) {
          MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?
                  withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces())
                  : withSettings();
  
-         return mockSettings.serializable()
                  .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));
      }
  
  
      private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {
          return new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata);
--- 85,110 ----
       * @param parentMock The parent of the current deep stub mock.
       * @return The mock
       */
+     private Object newDeepStubMock(GenericMetadataSupport returnTypeGenericMetadata, Object parentMock) {
+         MockCreationSettings parentMockSettings = new MockUtil().getMockSettings(parentMock);
          return mockitoCore().mock(
                  returnTypeGenericMetadata.rawType(),
+                 withSettingsUsing(returnTypeGenericMetadata, parentMockSettings)
          );
      }
  
+     private MockSettings withSettingsUsing(GenericMetadataSupport returnTypeGenericMetadata, MockCreationSettings parentMockSettings) {
          MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?
                  withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces())
                  : withSettings();
  
+         return propagateSerializationSettings(mockSettings, parentMockSettings)
                  .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));
      }
  
+     private MockSettings propagateSerializationSettings(MockSettings mockSettings, MockCreationSettings parentMockSettings) {
+         return mockSettings.serializable(parentMockSettings.getSerializableMode());
+     }
  
      private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {
          return new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata);
