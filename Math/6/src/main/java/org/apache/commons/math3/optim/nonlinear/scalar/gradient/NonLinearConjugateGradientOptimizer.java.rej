***************
*** 211,226 ****
          }
  
          PointValuePair current = null;
-         int iter = 0;
          int maxEval = getMaxEvaluations();
          while (true) {
-             ++iter;
  
              final double objective = computeObjectiveValue(point);
              PointValuePair previous = current;
              current = new PointValuePair(point, objective);
              if (previous != null) {
-                 if (checker.converged(iter, previous, current)) {
                      // We have found an optimum.
                      return current;
                  }
--- 211,225 ----
          }
  
          PointValuePair current = null;
          int maxEval = getMaxEvaluations();
          while (true) {
+             incrementIterationCount();
  
              final double objective = computeObjectiveValue(point);
              PointValuePair previous = current;
              current = new PointValuePair(point, objective);
              if (previous != null) {
+                 if (checker.converged(getIterations(), previous, current)) {
                      // We have found an optimum.
                      return current;
                  }
***************
*** 274,280 ****
              steepestDescent = newSteepestDescent;
  
              // Compute conjugate search direction.
-             if (iter % n == 0 ||
                  beta < 0) {
                  // Break conjugation: reset search direction.
                  searchDirection = steepestDescent.clone();
--- 273,279 ----
              steepestDescent = newSteepestDescent;
  
              // Compute conjugate search direction.
+             if (getIterations() % n == 0 ||
                  beta < 0) {
                  // Break conjugation: reset search direction.
                  searchDirection = steepestDescent.clone();
