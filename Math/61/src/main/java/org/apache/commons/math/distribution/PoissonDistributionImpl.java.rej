***************
*** 19,25 ****
  import java.io.Serializable;
  
  import org.apache.commons.math.MathException;
- import org.apache.commons.math.MathRuntimeException;
  import org.apache.commons.math.exception.util.LocalizedFormats;
  import org.apache.commons.math.special.Gamma;
  import org.apache.commons.math.util.MathUtils;
--- 19,25 ----
  import java.io.Serializable;
  
  import org.apache.commons.math.MathException;
+ import org.apache.commons.math.exception.NotStrictlyPositiveException;
  import org.apache.commons.math.exception.util.LocalizedFormats;
  import org.apache.commons.math.special.Gamma;
  import org.apache.commons.math.util.MathUtils;
***************
*** 91,97 ****
       */
      public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
          if (p <= 0) {
-             throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p);
          }
          mean = p;
          normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
--- 91,97 ----
       */
      public PoissonDistributionImpl(double p, double epsilon, int maxIterations) {
          if (p <= 0) {
+             throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p);
          }
          mean = p;
          normal = new NormalDistributionImpl(p, FastMath.sqrt(p));
